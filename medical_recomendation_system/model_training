{"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KalFgBBv_Zzo","executionInfo":{"status":"ok","timestamp":1753551834622,"user_tz":-330,"elapsed":5525,"user":{"displayName":"Nishant Kumar","userId":"03387622159521786981"}},"outputId":"2bb4c0ca-d00f-4b8d-faaa-3f3496046f3c"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"markdown","source":["**load dataset & tools**"],"metadata":{"id":"5KPs6r1rCbhP"}},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"wbHp8qvR_sNW","executionInfo":{"status":"ok","timestamp":1753551840690,"user_tz":-330,"elapsed":121,"user":{"displayName":"Nishant Kumar","userId":"03387622159521786981"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["df=pd.read_csv('/content/drive/MyDrive/medical_recomendation_system/datasets/Training.csv')"],"metadata":{"id":"yFB7mLSNC7xc","executionInfo":{"status":"ok","timestamp":1753551842275,"user_tz":-330,"elapsed":42,"user":{"displayName":"Nishant Kumar","userId":"03387622159521786981"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"collapsed":true,"colab":{"base_uri":"https://localhost:8080/","height":342},"id":"G1UcUvwgDH3B","executionInfo":{"status":"ok","timestamp":1753551846685,"user_tz":-330,"elapsed":205,"user":{"displayName":"Nishant Kumar","userId":"03387622159521786981"}},"outputId":"88b47b32-24fa-40d3-b669-9657e285b470"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   itching  skin_rash  nodal_skin_eruptions  continuous_sneezing  shivering  \\\n","0        1          1                     1                    0          0   \n","1        0          1                     1                    0          0   \n","2        1          0                     1                    0          0   \n","3        1          1                     0                    0          0   \n","4        1          1                     1                    0          0   \n","\n","   chills  joint_pain  stomach_pain  acidity  ulcers_on_tongue  ...  \\\n","0       0           0             0        0                 0  ...   \n","1       0           0             0        0                 0  ...   \n","2       0           0             0        0                 0  ...   \n","3       0           0             0        0                 0  ...   \n","4       0           0             0        0                 0  ...   \n","\n","   blackheads  scurring  skin_peeling  silver_like_dusting  \\\n","0           0         0             0                    0   \n","1           0         0             0                    0   \n","2           0         0             0                    0   \n","3           0         0             0                    0   \n","4           0         0             0                    0   \n","\n","   small_dents_in_nails  inflammatory_nails  blister  red_sore_around_nose  \\\n","0                     0                   0        0                     0   \n","1                     0                   0        0                     0   \n","2                     0                   0        0                     0   \n","3                     0                   0        0                     0   \n","4                     0                   0        0                     0   \n","\n","   yellow_crust_ooze         prognosis  \n","0                  0  Fungal infection  \n","1                  0  Fungal infection  \n","2                  0  Fungal infection  \n","3                  0  Fungal infection  \n","4                  0  Fungal infection  \n","\n","[5 rows x 133 columns]"],"text/html":["\n","  <div id=\"df-960f96de-1da8-42a9-b607-f055a1859c53\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>itching</th>\n","      <th>skin_rash</th>\n","      <th>nodal_skin_eruptions</th>\n","      <th>continuous_sneezing</th>\n","      <th>shivering</th>\n","      <th>chills</th>\n","      <th>joint_pain</th>\n","      <th>stomach_pain</th>\n","      <th>acidity</th>\n","      <th>ulcers_on_tongue</th>\n","      <th>...</th>\n","      <th>blackheads</th>\n","      <th>scurring</th>\n","      <th>skin_peeling</th>\n","      <th>silver_like_dusting</th>\n","      <th>small_dents_in_nails</th>\n","      <th>inflammatory_nails</th>\n","      <th>blister</th>\n","      <th>red_sore_around_nose</th>\n","      <th>yellow_crust_ooze</th>\n","      <th>prognosis</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Fungal infection</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Fungal infection</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Fungal infection</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Fungal infection</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Fungal infection</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 133 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-960f96de-1da8-42a9-b607-f055a1859c53')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-960f96de-1da8-42a9-b607-f055a1859c53 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-960f96de-1da8-42a9-b607-f055a1859c53');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-fa8d0843-d120-4534-a7a6-1206db6141cb\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fa8d0843-d120-4534-a7a6-1206db6141cb')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-fa8d0843-d120-4534-a7a6-1206db6141cb button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":26}]},{"cell_type":"markdown","source":["**train test split**"],"metadata":{"id":"oQAMlxmvIN-6"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import LabelEncoder"],"metadata":{"id":"nsWYwzyHDW4J","executionInfo":{"status":"ok","timestamp":1753551848977,"user_tz":-330,"elapsed":41,"user":{"displayName":"Nishant Kumar","userId":"03387622159521786981"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["X=df.drop('prognosis',axis=1)\n","y=df['prognosis']"],"metadata":{"id":"yhwrPc1HEJLA","executionInfo":{"status":"ok","timestamp":1753551850896,"user_tz":-330,"elapsed":40,"user":{"displayName":"Nishant Kumar","userId":"03387622159521786981"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["le=LabelEncoder()\n","Y=le.fit_transform(y)"],"metadata":{"collapsed":true,"id":"FKWdE66XFgA9","executionInfo":{"status":"ok","timestamp":1753551852502,"user_tz":-330,"elapsed":43,"user":{"displayName":"Nishant Kumar","userId":"03387622159521786981"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.3,random_state=20)"],"metadata":{"id":"rGTMJAduFhmi","executionInfo":{"status":"ok","timestamp":1753551854334,"user_tz":-330,"elapsed":40,"user":{"displayName":"Nishant Kumar","userId":"03387622159521786981"}}},"execution_count":30,"outputs":[]},{"cell_type":"markdown","source":["**Training top models**"],"metadata":{"id":"PCGPpw3uIFOH"}},{"cell_type":"code","source":["from sklearn.datasets import make_classification\n","from sklearn.model_selection import train_test_split\n","from sklearn.svm import SVC\n","from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.naive_bayes import MultinomialNB\n","from sklearn.metrics import accuracy_score, confusion_matrix\n","import numpy as np"],"metadata":{"id":"E_VHUkrwHKtb","executionInfo":{"status":"ok","timestamp":1753551855662,"user_tz":-330,"elapsed":39,"user":{"displayName":"Nishant Kumar","userId":"03387622159521786981"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["##using dictonary to store model\n","models={\n","    \"SVC\":SVC(kernel='linear'),\n","    \"RandomForestClassifier\":RandomForestClassifier(n_estimators=100, random_state=42),\n","    \"GradientBoostingClassifier\":GradientBoostingClassifier(n_estimators=100, random_state=42),\n","    \"KNeighborsClassifier\":KNeighborsClassifier(n_neighbors=5),\n","    \"MultinomialNB\":MultinomialNB()\n","}"],"metadata":{"id":"ua9GCJ5mOOJZ","executionInfo":{"status":"ok","timestamp":1753551857548,"user_tz":-330,"elapsed":45,"user":{"displayName":"Nishant Kumar","userId":"03387622159521786981"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["##looping the model\n","for model_name,model in models.items():\n","\n","    ##training the model\n","    model.fit(X_train,Y_train)\n","\n","    ##predicting the output\n","    predictions=model.predict(X_test)\n","\n","    ##calculating the accuracy\n","    accuracy=accuracy_score(Y_test,predictions)\n","    print(f\"Accuracy of {model_name}: {accuracy}\")\n","\n","    ##printing the cofussion matrix\n","    conf_matrix=confusion_matrix(Y_test,predictions)\n","    print(f\"Confusion Matrix of {model_name}:\")\n","    print(conf_matrix)\n","    print(\"\\n\")\n","\n"],"metadata":{"id":"Zaesox2cOyRm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1753551884037,"user_tz":-330,"elapsed":24650,"user":{"displayName":"Nishant Kumar","userId":"03387622159521786981"}},"outputId":"9edf50cc-e6e4-4601-9a88-3818f569422c"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy of SVC: 1.0\n","Confusion Matrix of SVC:\n","[[40  0  0 ...  0  0  0]\n"," [ 0 43  0 ...  0  0  0]\n"," [ 0  0 28 ...  0  0  0]\n"," ...\n"," [ 0  0  0 ... 34  0  0]\n"," [ 0  0  0 ...  0 41  0]\n"," [ 0  0  0 ...  0  0 31]]\n","\n","\n","Accuracy of RandomForestClassifier: 1.0\n","Confusion Matrix of RandomForestClassifier:\n","[[40  0  0 ...  0  0  0]\n"," [ 0 43  0 ...  0  0  0]\n"," [ 0  0 28 ...  0  0  0]\n"," ...\n"," [ 0  0  0 ... 34  0  0]\n"," [ 0  0  0 ...  0 41  0]\n"," [ 0  0  0 ...  0  0 31]]\n","\n","\n","Accuracy of GradientBoostingClassifier: 1.0\n","Confusion Matrix of GradientBoostingClassifier:\n","[[40  0  0 ...  0  0  0]\n"," [ 0 43  0 ...  0  0  0]\n"," [ 0  0 28 ...  0  0  0]\n"," ...\n"," [ 0  0  0 ... 34  0  0]\n"," [ 0  0  0 ...  0 41  0]\n"," [ 0  0  0 ...  0  0 31]]\n","\n","\n","Accuracy of KNeighborsClassifier: 1.0\n","Confusion Matrix of KNeighborsClassifier:\n","[[40  0  0 ...  0  0  0]\n"," [ 0 43  0 ...  0  0  0]\n"," [ 0  0 28 ...  0  0  0]\n"," ...\n"," [ 0  0  0 ... 34  0  0]\n"," [ 0  0  0 ...  0 41  0]\n"," [ 0  0  0 ...  0  0 31]]\n","\n","\n","Accuracy of MultinomialNB: 1.0\n","Confusion Matrix of MultinomialNB:\n","[[40  0  0 ...  0  0  0]\n"," [ 0 43  0 ...  0  0  0]\n"," [ 0  0 28 ...  0  0  0]\n"," ...\n"," [ 0  0  0 ... 34  0  0]\n"," [ 0  0  0 ...  0 41  0]\n"," [ 0  0  0 ...  0  0 31]]\n","\n","\n"]}]},{"cell_type":"markdown","source":["**single prediction**"],"metadata":{"id":"0-UIXKrLYrT9"}},{"cell_type":"code","source":["svc=SVC(kernel='linear')\n","svc.fit(X_train,Y_train)\n","svc_predict=svc.predict(X_test)\n","svc_accuracy=accuracy_score(Y_test,svc_predict)\n","print(f\"Accuracy of SVC: {svc_accuracy}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"haeVpMAMYxfF","executionInfo":{"status":"ok","timestamp":1753551891582,"user_tz":-330,"elapsed":194,"user":{"displayName":"Nishant Kumar","userId":"03387622159521786981"}},"outputId":"e3f47e45-9cc1-4708-8146-23daaa4b9ab9"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy of SVC: 1.0\n"]}]},{"cell_type":"markdown","source":["**saving the model**"],"metadata":{"id":"B0OktIJ1YdMT"}},{"cell_type":"code","source":["##saving the model\n","import pickle\n","pickle.dump(svc,open('/content/drive/MyDrive/medical_recomendation_system/models/svc_model.pkl','wb'))"],"metadata":{"id":"st0FRgEoYVjc","executionInfo":{"status":"ok","timestamp":1753551893306,"user_tz":-330,"elapsed":68,"user":{"displayName":"Nishant Kumar","userId":"03387622159521786981"}}},"execution_count":35,"outputs":[]},{"cell_type":"markdown","source":["**loading the model**"],"metadata":{"id":"14k8nYD_aXvr"}},{"cell_type":"code","source":["svc_model=pickle.load(open('/content/drive/MyDrive/medical_recomendation_system/models/svc_model.pkl','rb'))"],"metadata":{"id":"nIN2X1vnZ35a","executionInfo":{"status":"ok","timestamp":1753551895709,"user_tz":-330,"elapsed":467,"user":{"displayName":"Nishant Kumar","userId":"03387622159521786981"}}},"execution_count":36,"outputs":[]},{"cell_type":"markdown","source":["**testing on single testcase**"],"metadata":{"id":"IcAXr3G_briB"}},{"cell_type":"code","source":["print(\"precited lable:\",svc_model.predict(X_test.iloc[[0]]))\n","print(\"actual label:\",Y_test[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iP2bJo2UaWwC","executionInfo":{"status":"ok","timestamp":1753551899474,"user_tz":-330,"elapsed":55,"user":{"displayName":"Nishant Kumar","userId":"03387622159521786981"}},"outputId":"dd7f6959-ae99-4b75-85ff-2b6913d1151f"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["precited lable: [40]\n","actual label: 40\n"]}]},{"cell_type":"markdown","source":["**load database and use logic for recomnendation**"],"metadata":{"id":"Tr--MlFqrDqE"}},{"cell_type":"code","source":["precautions = pd.read_csv('/content/drive/MyDrive/medical_recomendation_system/datasets/precautions_df.csv')\n","workout = pd.read_csv('/content/drive/MyDrive/medical_recomendation_system/datasets/workout_df.csv')\n","description = pd.read_csv('/content/drive/MyDrive/medical_recomendation_system/datasets/description.csv')\n","medications = pd.read_csv('/content/drive/MyDrive/medical_recomendation_system/datasets/medications.csv')\n","diets = pd.read_csv('/content/drive/MyDrive/medical_recomendation_system/datasets/diets.csv')"],"metadata":{"id":"WcrzFLpvdNjG","executionInfo":{"status":"ok","timestamp":1753551901540,"user_tz":-330,"elapsed":47,"user":{"displayName":"Nishant Kumar","userId":"03387622159521786981"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["#============================================================\n","# custome and helping functions\n","#==========================helper funtions================\n","def get_detail(dis):\n","    desc = description[description['Disease'] == dis]['Description']\n","    desc = \" \".join([w for w in desc])\n","\n","    pre = precautions[precautions['Disease'] == dis][['Precaution_1', 'Precaution_2', 'Precaution_3', 'Precaution_4']]\n","    pre = [col for col in pre.values]\n","\n","    med = medications[medications['Disease'] == dis]['Medication']\n","    med = [med for med in med.values]\n","\n","    die = diets[diets['Disease'] == dis]['Diet']\n","    die = [die for die in die.values]\n","\n","    wrkout = workout[workout['disease'] == dis] ['workout']\n","\n","\n","    return desc,pre,med,die,wrkout\n","\n","symptoms_dict = {'itching': 0, 'skin_rash': 1, 'nodal_skin_eruptions': 2, 'continuous_sneezing': 3, 'shivering': 4, 'chills': 5, 'joint_pain': 6, 'stomach_pain': 7, 'acidity': 8, 'ulcers_on_tongue': 9, 'muscle_wasting': 10, 'vomiting': 11, 'burning_micturition': 12, 'spotting_ urination': 13, 'fatigue': 14, 'weight_gain': 15, 'anxiety': 16, 'cold_hands_and_feets': 17, 'mood_swings': 18, 'weight_loss': 19, 'restlessness': 20, 'lethargy': 21, 'patches_in_throat': 22, 'irregular_sugar_level': 23, 'cough': 24, 'high_fever': 25, 'sunken_eyes': 26, 'breathlessness': 27, 'sweating': 28, 'dehydration': 29, 'indigestion': 30, 'headache': 31, 'yellowish_skin': 32, 'dark_urine': 33, 'nausea': 34, 'loss_of_appetite': 35, 'pain_behind_the_eyes': 36, 'back_pain': 37, 'constipation': 38, 'abdominal_pain': 39, 'diarrhoea': 40, 'mild_fever': 41, 'yellow_urine': 42, 'yellowing_of_eyes': 43, 'acute_liver_failure': 44, 'fluid_overload': 45, 'swelling_of_stomach': 46, 'swelled_lymph_nodes': 47, 'malaise': 48, 'blurred_and_distorted_vision': 49, 'phlegm': 50, 'throat_irritation': 51, 'redness_of_eyes': 52, 'sinus_pressure': 53, 'runny_nose': 54, 'congestion': 55, 'chest_pain': 56, 'weakness_in_limbs': 57, 'fast_heart_rate': 58, 'pain_during_bowel_movements': 59, 'pain_in_anal_region': 60, 'bloody_stool': 61, 'irritation_in_anus': 62, 'neck_pain': 63, 'dizziness': 64, 'cramps': 65, 'bruising': 66, 'obesity': 67, 'swollen_legs': 68, 'swollen_blood_vessels': 69, 'puffy_face_and_eyes': 70, 'enlarged_thyroid': 71, 'brittle_nails': 72, 'swollen_extremeties': 73, 'excessive_hunger': 74, 'extra_marital_contacts': 75, 'drying_and_tingling_lips': 76, 'slurred_speech': 77, 'knee_pain': 78, 'hip_joint_pain': 79, 'muscle_weakness': 80, 'stiff_neck': 81, 'swelling_joints': 82, 'movement_stiffness': 83, 'spinning_movements': 84, 'loss_of_balance': 85, 'unsteadiness': 86, 'weakness_of_one_body_side': 87, 'loss_of_smell': 88, 'bladder_discomfort': 89, 'foul_smell_of urine': 90, 'continuous_feel_of_urine': 91, 'passage_of_gases': 92, 'internal_itching': 93, 'toxic_look_(typhos)': 94, 'depression': 95, 'irritability': 96, 'muscle_pain': 97, 'altered_sensorium': 98, 'red_spots_over_body': 99, 'belly_pain': 100, 'abnormal_menstruation': 101, 'dischromic _patches': 102, 'watering_from_eyes': 103, 'increased_appetite': 104, 'polyuria': 105, 'family_history': 106, 'mucoid_sputum': 107, 'rusty_sputum': 108, 'lack_of_concentration': 109, 'visual_disturbances': 110, 'receiving_blood_transfusion': 111, 'receiving_unsterile_injections': 112, 'coma': 113, 'stomach_bleeding': 114, 'distention_of_abdomen': 115, 'history_of_alcohol_consumption': 116, 'fluid_overload.1': 117, 'blood_in_sputum': 118, 'prominent_veins_on_calf': 119, 'palpitations': 120, 'painful_walking': 121, 'pus_filled_pimples': 122, 'blackheads': 123, 'scurring': 124, 'skin_peeling': 125, 'silver_like_dusting': 126, 'small_dents_in_nails': 127, 'inflammatory_nails': 128, 'blister': 129, 'red_sore_around_nose': 130, 'yellow_crust_ooze': 131}\n","diseases_list = {15: 'Fungal infection', 4: 'Allergy', 16: 'GERD', 9: 'Chronic cholestasis', 14: 'Drug Reaction', 33: 'Peptic ulcer diseae', 1: 'AIDS', 12: 'Diabetes ', 17: 'Gastroenteritis', 6: 'Bronchial Asthma', 23: 'Hypertension ', 30: 'Migraine', 7: 'Cervical spondylosis', 32: 'Paralysis (brain hemorrhage)', 28: 'Jaundice', 29: 'Malaria', 8: 'Chicken pox', 11: 'Dengue', 37: 'Typhoid', 40: 'hepatitis A', 19: 'Hepatitis B', 20: 'Hepatitis C', 21: 'Hepatitis D', 22: 'Hepatitis E', 3: 'Alcoholic hepatitis', 36: 'Tuberculosis', 10: 'Common Cold', 34: 'Pneumonia', 13: 'Dimorphic hemmorhoids(piles)', 18: 'Heart attack', 39: 'Varicose veins', 26: 'Hypothyroidism', 24: 'Hyperthyroidism', 25: 'Hypoglycemia', 31: 'Osteoarthristis', 5: 'Arthritis', 0: '(vertigo) Paroymsal  Positional Vertigo', 2: 'Acne', 38: 'Urinary tract infection', 35: 'Psoriasis', 27: 'Impetigo'}\n","\n","# Model Prediction function\n","def get_predicted_value(patient_symptoms):\n","    input_vector = np.zeros(len(symptoms_dict))\n","    for item in patient_symptoms:\n","        input_vector[symptoms_dict[item]] = 1\n","    return diseases_list[svc_model.predict([input_vector])[0]]"],"metadata":{"id":"n4VU6SFVx-tY","executionInfo":{"status":"ok","timestamp":1753551903777,"user_tz":-330,"elapsed":123,"user":{"displayName":"Nishant Kumar","userId":"03387622159521786981"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["# Test 1\n","# Split the user's input into a list of symptoms (assuming they are comma-separated) # itching,skin_rash,nodal_skin_eruptions\n","symptoms = input(\"Enter your symptoms.......\")\n","user_symptoms = [s.strip() for s in symptoms.split(',')]\n","# Remove any extra characters, if any\n","user_symptoms = [symptom.strip(\"[]' \") for symptom in user_symptoms]\n","predicted_disease = get_predicted_value(user_symptoms)\n","\n","desc, pre, med, die, wrkout = get_detail(predicted_disease)\n","\n","print(\"=================predicted disease============\")\n","print(predicted_disease)\n","print(\"=================description==================\")\n","print(desc)\n","print(\"=================precautions==================\")\n","i = 1\n","for p_i in pre[0]:\n","    print(i, \": \", p_i)\n","    i += 1\n","i=1\n","print(\"=================medications==================\")\n","for m_i in med:\n","    print(i, \": \", m_i)\n","    i += 1\n","i=1\n","print(\"=================workout==================\")\n","for w_i in wrkout:\n","    print(i, \": \", w_i)\n","    i += 1\n","i=1\n","print(\"=================diets==================\")\n","for d_i in die:\n","    print(i, \": \", d_i)\n","    i += 1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z6FPW_UNypu0","executionInfo":{"status":"ok","timestamp":1753551920393,"user_tz":-330,"elapsed":3828,"user":{"displayName":"Nishant Kumar","userId":"03387622159521786981"}},"outputId":"b000e2c4-938d-4d1e-bf93-8f5ff5b0975e"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter your symptoms.......itching,skin_rash,nodal_skin_eruptions,continuous_sneezing,shivering\n","=================predicted disease============\n","Fungal infection\n","=================description==================\n","Fungal infection is a common skin condition caused by fungi.\n","=================precautions==================\n","1 :  bath twice\n","2 :  use detol or neem in bathing water\n","3 :  keep infected area dry\n","4 :  use clean cloths\n","=================medications==================\n","1 :  ['Antifungal Cream', 'Fluconazole', 'Terbinafine', 'Clotrimazole', 'Ketoconazole']\n","=================workout==================\n","1 :  Avoid sugary foods\n","2 :  Consume probiotics\n","3 :  Increase intake of garlic\n","4 :  Include yogurt in diet\n","5 :  Limit processed foods\n","6 :  Stay hydrated\n","7 :  Consume green tea\n","8 :  Eat foods rich in zinc\n","9 :  Include turmeric in diet\n","10 :  Eat fruits and vegetables\n","=================diets==================\n","1 :  ['Antifungal Diet', 'Probiotics', 'Garlic', 'Coconut oil', 'Turmeric']\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/sklearn/utils/validation.py:2739: UserWarning: X does not have valid feature names, but SVC was fitted with feature names\n","  warnings.warn(\n"]}]}],"metadata":{"colab":{"provenance":[{"file_id":"/v2/external/notebooks/intro.ipynb","timestamp":1753357895342}]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}